<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN""http://www.w3.org/TR/html4/loose.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<title>PaperPass 最权威中文论文抄袭检测系统</title>
<style type="text/css">
<!--
user_icon {
color: #FFFFFF;
}
html
{
overflow-x:hidden;
overflow-y:auto;
}
body,td,th {
font-family: "微软雅黑";
font-size: 12px;
}
h1,h2,h3,h4,h5,h6 {
font-family: "宋体";
}
p{
margin-bottom:10px;
}
demo_padding {
line-height: 30px;
}
.zhengwen {
padding-right: 15px;
padding-left: 5px;
padding-bottom:100px;
font-size: 13px;
line-height: 20px;
color: #666666;
}
.zhengwencenter {
padding-right: 15px;
padding-left: 0px;
margin-bottom:10px;
font-size: 13px;
line-height: 20px;
color: #666666;
text-align:center
}
.neikuang {
background-color: #EBEBEB;
border: 1px solid #999999;
padding-right: 10px;
padding-left: 10px;
margin-top:10px;
margin-left:25px;
width:300px;
}
.shubu{
height: 20px;
width: 20px;
margin-left:25px;
background-color: #FFFFFF;
border: 1px solid #999999;
text-align: center;
vertical-align: middle;
display: block;
color: #666666;
}
a.red:link {color:#FF0000}
a.red:visited {color:#FF0000}
a.red:hover {color:#000000}
a.red:active {color:#000000}

a.orange:link {color:#FF6600}
a.orange:visited {color:#FF6600}
a.orange:hover {color:#000000}
a.orange:active {color:#000000}

a.dark:link {color:#666666}
a.dark:visited {color:#666666}
a.dark:hover {color:#000000}
a.dark:active {color:#000000}

a.pagelink:hover {color:#000000}
a.pagelink:active {color:#000000}

.green{color:#008000}
.gray{color:#666666}
.red{color:#FF0000}
.orange{color:#FF6600}
a{TEXT-DECORATION:none}

-->
</style>
</head>
<body>


<div class="zhengwen">
<div>
<span style="margin-left:25px"></span>
[
<a class="pagelink" href="paper_1.htm">首页</a>
<a class="pagelink" href="paper_4.htm">上一页</a>
<a class="pagelink" href="paper_6.htm">下一页</a>
<a class="pagelink" href="paper_14.htm">尾页</a>
页码：5/14页
]
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">182</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>图3.4 数据篡改原理</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">183</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/389.htm' target='right' class='orange' >针对以上几类安全威胁，基本的防御措施如下：</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">184</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>（1）图像加密。</span><a href='../sentence_detail/391.htm' target='right' class='orange' >针对上述第一种攻击类型，通常的解决方法是图像加密。</a><a href='../sentence_detail/392.htm' target='right' class='orange' >在客户端向服务器发送图像文件之前，首先利用特定的加密算法对图像信息内容进行加密，再将加密后的图像发送给服务器。</a><a href='../sentence_detail/393.htm' target='right' class='orange' >服务器接收到图像信息之后，利用对应的算法进行图像解密。</a><span class='green'>这种情况下，即使攻击者窃取了图像信息，他仍然无法读取真正的信息内容，有效防止了信息泄漏。</span><span class='green'>图像加密原理如图3.5所示。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">185</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>图3.5 图像加密原理</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">186</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>（2）时间戳认证[34]。</span><a href='../sentence_detail/398.htm' target='right' class='orange' >针对重放攻击，一种行之有效的办法是采用时间戳认证。</a><a href='../sentence_detail/399.htm' target='right' class='orange' >采用时间戳认证必须首先保证客户端与服务器端的同步，在此基础上，首先服务器端实时生成随机动态密钥，</a><a href='../sentence_detail/400.htm' target='right' class='orange' >其次客户端发送请求获取该密钥，最后客户端向服务器端发送用户名和随机密钥以登录系统。</a><span class='green'>在这种情况下，即使中间人截获了登陆信息，密钥的有效期也只有非常短暂的一小段时间。</span><span class='green'>一旦服务器重新生成随机密码，中间人截获的信息就是无效的。</span><a href='../sentence_detail/403.htm' target='right' class='red' >时间戳认证的原理如图3.6所示。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">187</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>图3.6 时间戳认证原理</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">188</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>（3）挑战应答认证。</span><a href='../sentence_detail/406.htm' target='right' class='orange' >挑战应答认证是另一种防止重放攻击的有效方法[35]。</a><span class='green'>其基本模型如下所示：</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">189</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>第1步：</span><span class='green'>客户端发起登陆请求。</span><span class='green'>（可假设登陆请求是一个Get请求）</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">190</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>第2步：</span><a href='../sentence_detail/412.htm' target='right' class='orange' >服务器端生成一个随机数K＝random(num)，并将K返回给客户端。</a><a href='../sentence_detail/413.htm' target='right' class='orange' >于此同时，服务器端缓存中保存该K值。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">191</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>第3步：</span><span class='green'>客户端计算R＝Hmac(K，P)，在该公式中，K代表密钥，是服务器返回的随机数，P代表用户密码，Hmac是一个用于加密的哈希函数。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">192</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>第4步：</span><span class='green'>服务器端从数据库读取用户密码，并进行与步骤3中相同的哈希函数运算 R’＝ hmac( K，</span><span class='green'>P’)，然后比较 R和 R’，如果二者相等，用户登陆系统成功。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">193</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>在这种模型下，中间人只能获取传输中的K值和R值，由于K值是一个随机数，R值是一个哈希函数结果，因此这两个值都是无意义的。</span><span class='green'>中间人无法通过这两个值获取用户密码，也无法发起重放攻击。</span><span class='green'>因此提升了系统的安全性。</span><a href='../sentence_detail/422.htm' target='right' class='orange' >请求应答认证的原理如图3.7所示。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">194</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>图3.7 请求应答认证原理</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">195</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>4.12 原有解决方案</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">196</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>4.13.9 安全威胁</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">197</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>正如我们在论文3.1中讨论的那样，Web系统中存在多种类型的安全攻击。</span><a href='../sentence_detail/427.htm' target='right' class='orange' >其中一种攻击是会话劫持，会话劫持的目的在于窃取信息内容本身。</a><a href='../sentence_detail/428.htm' target='right' class='orange' >另一种攻击是重放攻击，重放攻击的目的主要在于破坏认证的有效性。</a><span class='green'>在我们的指纹认证系统中，网络攻击者会尝试劫持包含有用户指纹信息的用户数据包，这是一种典型的会话劫持类攻击，</span><span class='green'>攻击者的目的在于盗取用户的指纹信息，在这种情况下，用户信息将会被窃取。</span><span class='green'>此外，攻击者在截获了用户发送的指纹数据包之后，会假冒用户向服务器再次发送该指纹数据包，以骗取服务器信任，</span><a href='../sentence_detail/432.htm' target='right' class='orange' >即使用户发送的指纹数据包经过加密也无法防止这种攻击，这种攻击是一种典型的重放攻击。</a><span class='green'>攻击者通过重放攻击以达到欺骗认证服务器的目的，这种情况下服务器会把攻击者认定为原始的用户，通过指纹认证。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">198</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>可见在我们的指纹认证系统中同时包含了以上两类安全隐患，指纹认证系统应该是足够安全的。</span><span class='green'>因此，我们尝试设计安全子系统以加强系统的安全性，最终使我们的系统可以同时防御会话劫持和重放攻击两种类型的攻击。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">199</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>4.13.10 通常的解决方案</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">200</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>文件加密和数字签名是加强系统安全性的最通用的解决方案[36]。</span><a href='../sentence_detail/438.htm' target='right' class='orange' >其中文件加密主要用于防止信息内容泄漏，而数字签名主要用来确保信息来源的真实可靠性。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">201</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>文件加密：</span><span class='green'>文件加密的基本流程是通过特定的算法对原始文件信息进行编码，使经过加密的文件变的不可读，我们可以将其称之为密文。</span><a href='../sentence_detail/441.htm' target='right' class='orange' >在没有密钥的情况下原始文件信息是无法获取的。</a><a href='../sentence_detail/442.htm' target='right' class='orange' >通过这种方式我们可以有效的防止数据被非法窃取。</a><a href='../sentence_detail/443.htm' target='right' class='orange' >对应的，文件加密的逆过程也被称为文件解密。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">202</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>数字签名:</span><span class='green'>数字签名技术本质上是通过数学方法来验证消息、软件和数字文件来源的真实性和可靠性。</span><a href='../sentence_detail/446.htm' target='right' class='red' >数字签名的基本流程如图3.8所示。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">203</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>图3.8 数字签名基本流程</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">204</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/448.htm' target='right' class='orange' >从图3.8中我们可以了解到数字签名技术的工作原理[37]。</a><a href='../sentence_detail/449.htm' target='right' class='orange' >首先，数据发送方使用他的私钥对他需要发送的信息进行加密，这样他就获得了签名消息；</a><a href='../sentence_detail/450.htm' target='right' class='orange' >其次，数据发送方讲签名消息发送给接收方。</a><a href='../sentence_detail/451.htm' target='right' class='orange' >数据接收方接收签名消息，并利用公钥对签名消息进行解密，解密后，接收方将获得解密后的 Hash值，</a><a href='../sentence_detail/452.htm' target='right' class='orange' >如果接收方解密后的 Hash值与发送方的 Hash值相匹配，则证明消息在签名之后没有被篡改，</a><span class='green'>否则则证明数据在签名之后遭到攻击者攻击，信息内容已经被改变。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">205</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>4.13.11 传统解决方案的问题</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">206</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/455.htm' target='right' class='orange' >上述传统解决方案对于加强系统安全性和抵御网络攻击能够起到良好的效果。</a><a href='../sentence_detail/456.htm' target='right' class='orange' >但是应用在我们的指纹识别系统中仍然有一些缺陷和问题。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">207</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>首先是系统复杂性的问题，数字签名需要另外一整套复杂的架构，此外，我们可能需要将安全系统拆分成两个子系统，一个子系统用来进行文件加密，另一个系统进行数字签名。</span><a href='../sentence_detail/458.htm' target='right' class='orange' >这就导致了系统架构的进一步复杂化。</a><span class='green'>其次，上述两种解决方案是一种通用的解决方案，并没有考虑到指纹识别系统的特殊性，也没有结合指纹图像的特征。</span><a href='../sentence_detail/460.htm' target='right' class='orange' >鉴于此，我们提出了一个新的安全解决方案。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">208</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>4.13 基于数字水印解决方案</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">209</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>为了克服传统解决方案的上述缺陷，在本部分我们将提出一个新的解决方案。</span><span class='green'>首先，我们会分析在没有加入安全措施的情况下系统可能产生的问题，之后我们会在这些问题的基础上，对解决方案进行逐步改进和优化。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">210</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>4.14.12 安全漏洞</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">211</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>首先，在不采用文件加密和数字签名的情况下，我们会发现原始的指纹认证系统会产生如图3.9所示的安全漏洞。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">212</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>图3.9 安全漏洞</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">213</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>在图3.9所示的业务场景下，用户 A希望采用本系统进行身份认证，该名用户采用智能手机采集他的指纹图像，</span><a href='../sentence_detail/468.htm' target='right' class='orange' >之后用户 A直接向服务器发送该图片以进行匹配。</a><span class='green'>然而此时网络攻击者B正在监听此次通信过程，网络攻击者B是一个恶意监听者并且盗取了用户A的指纹图像信息。</span><a href='../sentence_detail/470.htm' target='right' class='orange' >几分钟之后，攻击者B假扮A向服务器发送刚刚窃取到的指纹图像。</a><a href='../sentence_detail/471.htm' target='right' class='orange' >这样系统会把攻击者B当作是真正的用户A，B就成功获取了系统认证。</a><span class='green'>在这种情况下，由于B获得了与A相同的系统认证，对于用户A而言显然是不安全的。</span><span class='green'>可见，原始的指纹认证系统无法防止会话劫持和重放攻击，我们需要在系统中加入一些安全策略以增强系统的安全性。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">214</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>4.14.13 第一次改进</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">215</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/475.htm' target='right' class='orange' >为了增强系统安全性，我们在系统中引入了安全模块。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">216</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/476.htm' target='right' class='orange' >引入安全模块的两个关键点在于：</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">217</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/477.htm' target='right' class='orange' >（1）为了防止指纹图片信息泄密，客户端不应该将最原始的指纹图像信息发送给服务器。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">218</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>（2）为了防止重放攻击，系统可以采用一种类似于一次性密码本的加密技术[38]。</span><span class='green'>这意味着系统需要生成一个单次有效的密钥。</span><span class='green'>为了实现上述系统，我们可以基于时间戳来产生密钥。</span><span class='green'>当用户需要进行指纹认证时，服务器端首先检查时间戳密钥，如果时间戳密钥正确，</span><span class='green'>再进行指纹认证操作，否则系统不能确定请求来源的可靠性，就不再进行指纹认证操作。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">219</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>为了实现以上两个关键点，我们结合了二维码技术来构建指纹认证系统。</span><a href='../sentence_detail/484.htm' target='right' class='orange' >首先，服务器端根据时间戳来生成对应的二维码图片然后将该图片发送给客户端。</a><span class='green'>在这种情况下，由于二维码图片包含有时间戳信息，因此可以作为一次性密钥来防止重放攻击。</span><span class='green'>此外，我们可以将二维码图片和原始的指纹图片相结合，这样客户端发送图片时可以采用新的图片代替原始的指纹图片。</span><a href='../sentence_detail/487.htm' target='right' class='orange' >最终，加入了二维码技术的安全模块满足了上述两点安全需求。</a>
</p>
</div>


<div>
<span style="margin-left:25px"></span>
[
<a class="pagelink" href="paper_1.htm">首页</a>
<a class="pagelink" href="paper_4.htm">上一页</a>
<a class="pagelink" href="paper_6.htm">下一页</a>
<a class="pagelink" href="paper_14.htm">尾页</a>
页码：5/14页
]
</div>

<br>
<div style="margin-left:8px">

<div style="text-align:center;background-color:#CA122C;margin-top:30px;overflow:hidden;">
<a href="http://www.paperpass.com/publish/index?from=ppreport" target="blank" style="display:block;"><img height="180" src="http://file.paperpass.com/images/fabiao.jpg"></a>
</div>

</div>
</div>


<div class="zhengwencenter">
<p>
检测报告由<a href="http://www.paperpass.com/" target="_blank">PaperPass</a>文献相似度检测系统生成
</p>
<p>
Copyright © 2007-2015 PaperPass
</p>
</div>
<div style="margin-bottom:400px"></div>
</body>
</html>
