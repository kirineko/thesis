<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN""http://www.w3.org/TR/html4/loose.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<title>PaperPass 最权威中文论文抄袭检测系统</title>
<style type="text/css">
<!--
user_icon {
color: #FFFFFF;
}
html
{
overflow-x:hidden;
overflow-y:auto;
}
body,td,th {
font-family: "微软雅黑";
font-size: 12px;
}
h1,h2,h3,h4,h5,h6 {
font-family: "宋体";
}
p{
margin-bottom:10px;
}
demo_padding {
line-height: 30px;
}
.zhengwen {
padding-right: 15px;
padding-left: 5px;
padding-bottom:100px;
font-size: 13px;
line-height: 20px;
color: #666666;
}
.zhengwencenter {
padding-right: 15px;
padding-left: 0px;
margin-bottom:10px;
font-size: 13px;
line-height: 20px;
color: #666666;
text-align:center
}
.neikuang {
background-color: #EBEBEB;
border: 1px solid #999999;
padding-right: 10px;
padding-left: 10px;
margin-top:10px;
margin-left:25px;
width:300px;
}
.shubu{
height: 20px;
width: 20px;
margin-left:25px;
background-color: #FFFFFF;
border: 1px solid #999999;
text-align: center;
vertical-align: middle;
display: block;
color: #666666;
}
a.red:link {color:#FF0000}
a.red:visited {color:#FF0000}
a.red:hover {color:#000000}
a.red:active {color:#000000}

a.orange:link {color:#FF6600}
a.orange:visited {color:#FF6600}
a.orange:hover {color:#000000}
a.orange:active {color:#000000}

a.dark:link {color:#666666}
a.dark:visited {color:#666666}
a.dark:hover {color:#000000}
a.dark:active {color:#000000}

a.pagelink:hover {color:#000000}
a.pagelink:active {color:#000000}

.green{color:#008000}
.gray{color:#666666}
.red{color:#FF0000}
.orange{color:#FF6600}
a{TEXT-DECORATION:none}

-->
</style>
</head>
<body>


<div class="zhengwen">
<div>
<span style="margin-left:25px"></span>
[
<a class="pagelink" href="paper_1.htm">首页</a>
<a class="pagelink" href="paper_6.htm">上一页</a>
<a class="pagelink" href="paper_8.htm">下一页</a>
<a class="pagelink" href="paper_14.htm">尾页</a>
页码：7/14页
]
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">251</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>（1）客户端：</span><a href='../sentence_detail/585.htm' target='right' class='orange' >包含Android智能手机、指纹数据采集子模块、指纹特征提取子模块、指纹加密子模块。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">252</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>（2）服务器端：</span><a href='../sentence_detail/587.htm' target='right' class='orange' >包含Web服务器、指纹解密子模块、用户认证子模块、指纹匹配子模块。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">253</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>（3）第三方组件：</span><span class='green'>包含指纹匹配SDK，SourceAFIS SDK、NBIS SDK、Zxing.net、Nancy Framework等组件。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">254</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>（4）数据库：</span><a href='../sentence_detail/591.htm' target='right' class='orange' >包含指纹图像数据库、用户数据库等。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">255</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>5.17.19 工作流分析</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">256</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/593.htm' target='right' class='orange' >系统基本业务流程可大致分为以下几个步骤：</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">257</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>（1）指纹图像采集：</span><a href='../sentence_detail/595.htm' target='right' class='orange' >用户登录android客户端，android客户端调用手机相机和图像采集模块获取用户指纹图像。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">258</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>（2）指纹图像处理与特征提取：</span><a href='../sentence_detail/597.htm' target='right' class='orange' >客户端调用图像处理模块对指纹图片进行预处理，在此基础上对用户指纹进行特征提取。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">259</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>（3）图像加密：</span><span class='green'>首先客户端接收来自服务器端生成的二维码图片，然后客户端调用加密模块对原始指纹图片和二维码图片进行数字水印加密。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">260</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>（4）图片上传：</span><a href='../sentence_detail/601.htm' target='right' class='orange' >客户端调用Web API将加密后的指纹图片上传至服务器。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">261</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>（5）图像解密：</span><span class='green'>服务器端调用解密模块对加密的指纹图片进行解密，解密后服务器同时获得二维码图片和原始指纹图片。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">262</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>（6）用户认证：</span><span class='green'>服务器端调用用户认证子模块来检查二维码图片中的时间戳信息是否一致以确保用户来源的真实性。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">263</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>（7）指纹匹配：</span><a href='../sentence_detail/607.htm' target='right' class='orange' >服务器端调用指纹匹配SDK对用户上传的指纹图片和数据库中保存的指纹信息进行匹配和对比，得到相应的指纹匹配结果。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">264</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>（8）结果显示：</span><a href='../sentence_detail/609.htm' target='right' class='orange' >服务器将匹配结果返回给客户端，客户端根据匹配分数判断用户是否通过指纹匹配认证。</a><span class='green'>指纹认证过程完成。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">265</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/611.htm' target='right' class='red' >系统业务流程图如图4.1所示。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">266</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>图4.1 系统业务流程</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">267</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>5.17 基于REST的系统架构设计</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">268</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/614.htm' target='right' class='orange' >本部分是系统设计部分，首先进行系统整体架构设计，然后介绍了系统类设计方案，最后分模块进行了模块详细设计。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">269</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>5.18.20 整体架构设计</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">270</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/616.htm' target='right' class='orange' >在介绍系统架构设计之前，首先介绍系统的技术选型。</a><span class='green'>在不考虑第三方类库的平台支持情况下，由于指纹认证系统规模并不大，因此可以采用一些快速开发框架如 Ruby on Rails或 Node. js进行开发[40]，</span><span class='green'>并将服务器部署在 Linux的 Nginx服务器上，但是由于系统中采用了 SourceAFIS指纹识别开源库，并且该开源库仅提供了完善的. net版本。</span><span class='green'>因此本系统在技术选型过程中，底层指纹匹配服务只能基于.net构建。</span><span class='green'>最终采用了windows 10作为操作系统平台，IIS8作为Web服务器，MySql 5.6作为数据库服务器，.net Nancy Framework作为服务端开发框架。</span><span class='green'>使用Nancy Framework提供Web API，顶层实现了Android端、iOS端等客户端。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">271</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/622.htm' target='right' class='orange' >系统整体架构图如图4.2所示。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">272</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>图4.2 系统整体架构图</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">273</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/624.htm' target='right' class='orange' >从整体架构图中可以看出，系统共分为5层。</a><span class='green'>底层为数据库层，采用 MySQL提供 DBMS服务，其次为模型层，在 Nancy Framework中建立相应的模型类，中间为控制器层，</span><span class='green'>使用 Nancy Framework中的控制器组件编写具体的系统业务逻辑，上层为 API层，通过路由机制提供对应的 Web API服务，</span><span class='green'>向应用层提供所需的 JSON数据，最顶层为应用层，包括但不限于 Android端、 iOS端、 Web端等具体的应用服务，</span><a href='../sentence_detail/628.htm' target='right' class='orange' >这些应用服务通过解析 Web API中提供的 JSON数据填充其视图。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">274</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>5.18.21 系统类设计</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">275</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/630.htm' target='right' class='orange' >在整体架构设计的基础上，在Nancy框架的基础上进行类设计。</a><span class='green'>类设计的基本思路是：</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">276</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>（1）数据层与控制层分离，控制层与表现层分离，反映边界类和实体类的区别，反映实体类之间之间的继承与组合关系。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">277</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>（2）通过设计接口实现面向接口的设计而非面向实现的设计[41]。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">278</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/634.htm' target='right' class='orange' >（3）设计控制器类操作数据实体类</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">279</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/635.htm' target='right' class='orange' >（4）实体类与实体类之间通过关联类建立联系。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">280</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/636.htm' target='right' class='red' >系统类图整体设计如图4.3所示。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">281</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>图4.3 系统整体类设计</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">282</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/638.htm' target='right' class='orange' >先对系统类设计进行详细说明。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">283</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>首先定义实体类接口，实体类接口定义了实体类应具备哪些操作，在我们的指纹认证系统中，我们定义了IUserOperation接口和IFingerprintOperation接口。</span><span class='green'>IUserOperation接口定义了User实体类应该具有的操作，具体包含了insertToUser方法和isExistUser方法，分别用于添加用户和判断用户是否存在；</span><span class='green'>IFingerprintOperation接口定义了insertToFingerprint方法和getImages方法，分别用于添加指纹图片和获取所有指纹图片。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">284</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>其次定义实体类，实体类反映了该系统实际操作的对象，在本系统中共定义了User类和Fingerprint类两个实体类。</span><span class='green'>User类定义了用户所具有的属性，包括UserId和UserName属性，并实现了IUserOperation接口，Fingerprint类定义了指纹具有的属性，包括fpId，fpName，sampleNumber，userId和fpPath属性，并实现了IFingerprintOperation接口。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">285</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/644.htm' target='right' class='orange' >接下来定义实体关联类，关联类反映了用户实体和指纹实体之间一对多的关系。</a><span class='green'>共定义了一个关联类UserFingerprint类，共包含3个属性，ufID属性，userId属性和fpId属性。</span><a href='../sentence_detail/646.htm' target='right' class='orange' >通过此类建立起User类和Fingerprint类之间的关系。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">286</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>最后定义控制器类，我们主要定义了UserController和FingerprintController两个控制器类用于操作相应的数据实体类。</span><a href='../sentence_detail/648.htm' target='right' class='orange' >两个控制器类分别以来对应的数据实体类。</a><span class='green'>其中UserController类定义了insertUser和getUser两个方法，分别用于添加用户和获取所有用户；</span><span class='green'>FingerprintController类定义了uploadFingerprint方法、matchFingerprint方法、generateQrcode方法和verificationUser方法，分别用于用户上传指纹、用户匹配指纹、生成二维码和验证用户真实性。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">287</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>在系统中，对应于数据实体类和控制器类，实际上还有视图类，但是由于视图类基本上都是负责显示逻辑的 HTML代码，</span><span class='green'>与系统业务逻辑关联并不大，因此并不刻意反映在系统整体类图中。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">288</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>5.18.22 分模块详细设计</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">289</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>在整体类图的基础上，本部分对系统几个核心模块进行详细设计。</span><span class='green'>在本系统中，我们认为用户指纹录入和用户指纹匹配两个模块最为重要和关键。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">290</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/656.htm' target='right' class='orange' >（1）用户指纹录入模块详细设计</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">291</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/657.htm' target='right' class='orange' >用户指纹录入模块包含两个子模块：</a><span class='green'>用户信息上传子模块和用户指纹上传子模块，其中用户信息上传子模块是对用户自身的信息进行录入，是用户上传指纹图片的基础和前提；</span><span class='green'>在用户信息上传以后，用户才可以进行指纹信息的录入，用户指纹上传子模块是用户分指纹分样本上传指纹信息，</span><a href='../sentence_detail/660.htm' target='right' class='orange' >用户指纹上传是进一步进行指纹匹配的前提。</a><a href='../sentence_detail/661.htm' target='right' class='orange' >先分别从时序图角度对两个子模块进行描述。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">292</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/662.htm' target='right' class='orange' >用户信息上传子模块时序图如图4.4所示。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">293</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/663.htm' target='right' class='orange' >图4.4 用户信息上传时序图</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">294</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>从该时序图可以看出，用户信息上传共涉及4个实体，首先 User在 UserView视图中填写用户信息，</span><span class='green'>UserView收到用户信息之后请求 UserController类的 insertUser方法，该方法进一步请求 User类的 insertToUser方法将用户信息实际写入数据库中，</span><span class='green'>insertToUser方法执行以后，返回用户插入是否成功给 UserController类，控制器根据是否成功组织 JSON数据，并把 JSON数据返回给 View，</span><a href='../sentence_detail/667.htm' target='right' class='orange' >视图最终将 JSON数据返回给用户（客户端）。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">295</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/668.htm' target='right' class='orange' >用户指纹上传子模块时序图如图4.5所示。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">296</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/669.htm' target='right' class='orange' >图4.5 用户指纹上传时序图</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">297</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>从该时序图可以看出，用户指纹上传共涉及4个实体，首先 User在 FingerprintView视图中填写指纹数据，</span><span class='green'>视图收到用户指纹数据之后请求 FingerprintController类中的 UploadFingerprint方法，该方法进一步请求 Fingerprint类中的 insertToFingerprint方法将用户指纹数据写入数据库中，</span><span class='green'>insertToFingerprint方法执行以后，返回指纹插入是否成功给 FingerprintController类，控制器根据是否成功组织 JSON数据，并把 JSON数据返回给 View，</span><a href='../sentence_detail/673.htm' target='right' class='orange' >视图最终将 JSON数据返回给用户（客户端）。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">298</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/674.htm' target='right' class='orange' >（2）用户指纹匹配模块详细设计</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">299</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>用户指纹匹配模块是系统最核心和最关键的功能模块，整个匹配过程又可以细分为3个阶段：</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">300</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/676.htm' target='right' class='orange' >第一阶段，获取二维码阶段。</a><span class='green'>首先 User向 FingerprintView视图中发送获取二维码请求，视图收到用户请求后调用 FingerprintController类中的 generateQRCode方法生成二维码，</span><span class='green'>该方法执行完成以后向视图层返回二维码图像信息，视图层显示二维码图像给用户。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">301</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>第二阶段，用户验证阶段。</span><span class='green'>客户端将二维码和用户指纹图片进行数字水印加密之后向 FingerprintView视图提交匹配请求，</span><span class='green'>视图层收到匹配请求以后调用 FingerprintController中的 verificationUser方法验证用户的真实性，</span><span class='green'>并返回用户验证结果给 View类。</span>
</p>
</div>


<div>
<span style="margin-left:25px"></span>
[
<a class="pagelink" href="paper_1.htm">首页</a>
<a class="pagelink" href="paper_6.htm">上一页</a>
<a class="pagelink" href="paper_8.htm">下一页</a>
<a class="pagelink" href="paper_14.htm">尾页</a>
页码：7/14页
]
</div>

<br>
<div style="margin-left:8px">

<div style="text-align:center;background-color:#CA122C;margin-top:30px;overflow:hidden;">
<a href="http://www.paperpass.com/publish/index?from=ppreport" target="blank" style="display:block;"><img height="180" src="http://file.paperpass.com/images/fabiao.jpg"></a>
</div>

</div>
</div>


<div class="zhengwencenter">
<p>
检测报告由<a href="http://www.paperpass.com/" target="_blank">PaperPass</a>文献相似度检测系统生成
</p>
<p>
Copyright © 2007-2015 PaperPass
</p>
</div>
<div style="margin-bottom:400px"></div>
</body>
</html>
